<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.xuan.atcrowdfunding.manager.dao.UserMapper">

  <resultMap id="BaseResultMap" type="com.xuan.atcrowdfunding.bean.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loginacct" jdbcType="VARCHAR" property="loginacct" />
    <result column="userpswd" jdbcType="CHAR" property="userpswd" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="createtime" jdbcType="CHAR" property="createtime" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.xuan.atcrowdfunding.bean.User">
    insert into t_user (id, loginacct, userpswd, 
      username, email, createtime
      )
    values (#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR}, #{userpswd,jdbcType=CHAR}, 
      #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createtime,jdbcType=CHAR}
      )
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.xuan.atcrowdfunding.bean.User">
     update t_user      
       set username = #{username},  email = #{email}, loginacct = #{loginacct}
        where id = #{id}

  </update>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, loginacct, userpswd, username, email, createtime
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select id, loginacct, userpswd, username, email, createtime
    from t_user
  </select>
  
  <select id="queryUserLogin" parameterType="map" resultMap="BaseResultMap">
  	select id, loginacct, userpswd,    username, email, createtime  
	from t_user 
	where loginacct=#{loginacct} and userpswd=#{userpswd}
  </select>
  
<!--   <select id="queryList"  resultMap="BaseResultMap">
  	select id, loginacct, userpswd, username, email, createtime  
	from t_user 
	limit #{startIndex}, #{pageSize}
  </select>
  
  <select id="queryCount" resultType="int">
  	select count(*) 
  	from t_user
  </select> -->
  
  <select id="queryList"  resultMap="BaseResultMap">
  	select id, loginacct, userpswd, username, email, createtime  
	from t_user 
	<where>
		<if test="queryText!=null">
			loginacct like concat("%",#{queryText},"%")
		</if>
	</where>
	order by createtime desc
	limit #{startIndex}, #{pageSize}
  </select>
  
  <select id="queryCount" resultType="int">
  	select count(*) 
  	from t_user
  	<where>
  		<if test="queryText!=null">
  			loginacct like concat("%",#{queryText},"%")
  		</if>
  	</where>
  </select>
  
  <delete id="deleteBatchUser">
  	delete from t_user where id in
  	<foreach collection="array" open="("  separator=","  close=")" item="userid">
  		#{userid}
  	</foreach>
  </delete>
  
</mapper>